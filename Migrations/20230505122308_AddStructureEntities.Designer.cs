// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SamsungWatch.Data.EF;

#nullable disable

namespace SamsungWatch.Migrations
{
    [DbContext(typeof(SamsungWatchDbContext))]
    [Migration("20230505122308_AddStructureEntities")]
    partial class AddStructureEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SamsungWatch.Data.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("SeoAlias")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Samsung Galaxy Watch 4 Series",
                            ParentId = 0,
                            SeoAlias = "samsung-galaxy-watch-4-series"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Samsung Galaxy Watch 5 Series",
                            ParentId = 0,
                            SeoAlias = "samsung-galaxy-watch-5-series"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Samsung Galaxy Watch 4",
                            ParentId = 0,
                            SeoAlias = "samsung-galaxy-watch-4"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Samsung Galaxy Watch 4 Classic",
                            ParentId = 0,
                            SeoAlias = "samsung-galaxy-watch-4-classic"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Samsung Galaxy Watch 5",
                            ParentId = 0,
                            SeoAlias = "samsung-galaxy-watch-5"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Samsung Galaxy Watch 5 Pro",
                            ParentId = 0,
                            SeoAlias = "samsung-galaxy-watch-5-pro"
                        });
                });

            modelBuilder.Entity("SamsungWatch.Data.Entities.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ColorId");

                    b.ToTable("Colors", (string)null);

                    b.HasData(
                        new
                        {
                            ColorId = 1,
                            ColorCode = "#CECECE",
                            ColorName = "Trắng bạc"
                        },
                        new
                        {
                            ColorId = 2,
                            ColorCode = "#FFFFFF",
                            ColorName = "Trắng"
                        },
                        new
                        {
                            ColorId = 3,
                            ColorCode = "#000000",
                            ColorName = "Đen"
                        },
                        new
                        {
                            ColorId = 4,
                            ColorCode = "#E1AE8F",
                            ColorName = "Vàng hồng"
                        },
                        new
                        {
                            ColorId = 5,
                            ColorCode = "#00401F",
                            ColorName = "Xanh đen"
                        },
                        new
                        {
                            ColorId = 6,
                            ColorCode = "#AC89D8",
                            ColorName = "Tím"
                        });
                });

            modelBuilder.Entity("SamsungWatch.Data.Entities.Condition", b =>
                {
                    b.Property<int>("ConditionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConditionId"));

                    b.Property<string>("ConditionColor")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ConditionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ConditionId");

                    b.ToTable("Conditions", (string)null);

                    b.HasData(
                        new
                        {
                            ConditionId = 1,
                            ConditionColor = "#D4EDBD",
                            ConditionName = "FullBox, Đẹp keng"
                        },
                        new
                        {
                            ConditionId = 2,
                            ConditionColor = "#C0E1F6",
                            ConditionName = "NoBox, Đẹp keng"
                        },
                        new
                        {
                            ConditionId = 3,
                            ConditionColor = "#FFE5A1",
                            ConditionName = "FullBox, Xước nhẹ"
                        },
                        new
                        {
                            ConditionId = 4,
                            ConditionColor = "#FFCFC9",
                            ConditionName = "NoBox, Xước nhẹ"
                        },
                        new
                        {
                            ConditionId = 5,
                            ConditionColor = "#E9EAED",
                            ConditionName = "Khác"
                        });
                });

            modelBuilder.Entity("SamsungWatch.Data.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ConditionId")
                        .HasColumnType("int");

                    b.Property<int>("Connection")
                        .HasColumnType("int");

                    b.Property<decimal?>("CostPrice")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ColorId");

                    b.HasIndex("ConditionId");

                    b.HasIndex("SizeId");

                    b.HasIndex("StatusId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("SamsungWatch.Data.Entities.Size", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizeId"));

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SizeId");

                    b.ToTable("Sizes", (string)null);

                    b.HasData(
                        new
                        {
                            SizeId = 1,
                            SizeName = "40mm"
                        },
                        new
                        {
                            SizeId = 2,
                            SizeName = "41mm"
                        },
                        new
                        {
                            SizeId = 3,
                            SizeName = "42mm"
                        },
                        new
                        {
                            SizeId = 4,
                            SizeName = "44mm"
                        },
                        new
                        {
                            SizeId = 5,
                            SizeName = "45mm"
                        },
                        new
                        {
                            SizeId = 6,
                            SizeName = "46mm"
                        });
                });

            modelBuilder.Entity("SamsungWatch.Data.Entities.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("StatusColor")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses", (string)null);

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            StatusColor = "#FFCFC9",
                            StatusName = "Đã chốt, chưa cọc"
                        },
                        new
                        {
                            StatusId = 2,
                            StatusColor = "#FFE5A1",
                            StatusName = "Đã chốt, có cọc"
                        },
                        new
                        {
                            StatusId = 3,
                            StatusColor = "#D4EDBD",
                            StatusName = "Đang gửi"
                        },
                        new
                        {
                            StatusId = 4,
                            StatusColor = "#E6CFF3",
                            StatusName = "Đã giao"
                        },
                        new
                        {
                            StatusId = 5,
                            StatusColor = "#C0E1F6",
                            StatusName = "Đã nhận tiền"
                        },
                        new
                        {
                            StatusId = 6,
                            StatusColor = "#E9EAED",
                            StatusName = "Sẵn hàng Hà Nội"
                        },
                        new
                        {
                            StatusId = 7,
                            StatusColor = "#C6DCE1",
                            StatusName = "Sẵn hàng TP.HCM"
                        },
                        new
                        {
                            StatusId = 8,
                            StatusColor = "#FFC8AB",
                            StatusName = "Đang về"
                        },
                        new
                        {
                            StatusId = 9,
                            StatusColor = "#A3A4A9",
                            StatusName = "Trả hàng"
                        });
                });

            modelBuilder.Entity("SamsungWatch.Data.Entities.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("EmailConfirm")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "17f3e221-c34d-4498-a929-ea027d98dfbd",
                            Code = 562765,
                            Email = "nguyenphuduc62001@gmail.com",
                            EmailConfirm = true,
                            FullName = "Nguyễn Phú Đức",
                            Password = "FE9989D5012230C4C8DD97BD7D209DEF",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("SamsungWatch.Data.Entities.Product", b =>
                {
                    b.HasOne("SamsungWatch.Data.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SamsungWatch.Data.Entities.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SamsungWatch.Data.Entities.Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("ConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SamsungWatch.Data.Entities.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SamsungWatch.Data.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Color");

                    b.Navigation("Condition");

                    b.Navigation("Size");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
